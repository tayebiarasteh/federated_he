Network:
  batch_size: 1
  lr: 1e-4
  weight_decay: 0
  amsgrad: False
  image_downsample: False # if we want to downsample the images; otherwise we will crop a patch from images.
  #  resize_shape: [24,24,24] # d, h, w (training data are also stored in d, h, w). after cropping. multi mode 4-level. 4.7 GB for 48; 3.4 GB for 24
  resize_shape: [80,80,80] # d, h, w (training data are also stored in d, h, w). after cropping. multi mode 4-level. 3.4 GB for 24
#  resize_shape: [120,120,160] # d, h, w (training data are also stored in d, h, w). keep it dividable by 4; in syft padding is not possible
augmentation:
  patch_size: [128, 128, 128] # if we don't use image down sampling, patches of this size will be cropped from original image
  general_spatial_probability: 0.5 # probability of having spatial data augmentation at all
  general_intensity_probability: 0.5 # probability of having intensity data augmentation at all
  lateral_flip_prob: 0.4 # probability of having lateral flipping augmentation
  interior_flip_prob: 0.4 # probability of having interior flipping augmentation
  zoom_range: [1, 1.15] # 0.1 means from 0.9 to 1.1
  zoom_prob: -1 # probability of having zooming augmentation [for the moment only zoom-in: more than 1] [bug in the source code of tio]
  rotation_range: 5 # degrees. 1 = (-1, 1)
  rotation_prob: -1 # probability of having rotation augmentation [DON'T USE FOR BRATS]
  shift_range: 1 # pixels. 1 = (-1, 1)
  shift_prob: -1 # probability of having translation augmentation [DON'T USE FOR BRATS]
  eladf_control_points: 7
  eladf_max_displacement: 8
  elastic_prob: -1 # probability of having elastic deformation augmentation [DON'T USE FOR BRATS]
#  gamma_range: [0, 0.4] # this number changes beta exponent distribution; don't go more than 0.2
  gamma_range: [0.8, 1.2] # based on own implementation
  gamma_prob: 0.4 # probability of having gamma augmentation
  mu_AWGN: 0.0 # mean of AWGN
  sigma_AWGN: 0.03 # std of AWGN; don't go more than 0.03
  AWGN_prob: 0.2 # probability of having AWGN augmentation
  motion_prob: -1 # probability of having random motion augmentation [DON'T USE FOR BRATS]
  ghosting_prob: -1 # probability of having ghosting augmentation
  blurring_range: [0, 1] # range of std of Gaussian filter; don't go more than 1
  blurring_prob: -1 # probability of having blurring augmentation [bug in the source code of tio]
network_output_path: network_data/
output_data_path: output_data/
tb_logs_path: tensor_board_logs/
stat_log_path: stat_logs
checkpoint_name: checkpoint.tar
trained_model_name: trained_model.pth
class_weights: [0.00312639, 0.60484207, 0.05533713, 0.3366944] # for BraTS20


# changeable items:
file_path: /PATH TO DATASET/
target_dir: /WHERE YOU WANT TO STORE YOUR EXPERIMENTS/
network_save_freq: 200 # based on the batch size, shows the number of epochs done; every half an hour is good
display_stats_freq: 1 # valid freq is equal to this
num_epochs: 150